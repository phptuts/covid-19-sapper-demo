import { S as SvelteComponent, i as init, s as safe_not_equal, c as space, b as element, p as text, N as query_selector_all, d as detach, h as claim_space, f as claim_element, g as children, q as claim_text, j as attr, a as insert, k as append, n as noop } from './client.2752e8d9.js';

/* src/routes/about.svelte generated by Svelte v3.20.1 */

function create_fragment(ctx) {
	let t0;
	let div;
	let h1;
	let t1;
	let t2;
	let p0;
	let t3;
	let t4;
	let p1;
	let t5;
	let a0;
	let t6;
	let t7;
	let t8;
	let p2;
	let t9;
	let a1;
	let t10;
	let t11;

	return {
		c() {
			t0 = space();
			div = element("div");
			h1 = element("h1");
			t1 = text("About Covid-19");
			t2 = space();
			p0 = element("p");
			t3 = text("This app was made for demo purposes / tutorial purposes.");
			t4 = space();
			p1 = element("p");
			t5 = text("I used this\n    ");
			a0 = element("a");
			t6 = text("API");
			t7 = text("\n    to build this app. Thank you for building this!!! HUGE PROPS.");
			t8 = space();
			p2 = element("p");
			t9 = text("This is an open source project.\n    ");
			a1 = element("a");
			t10 = text("Click here");
			t11 = text("\n    to view the code.");
			this.h();
		},
		l(nodes) {
			const head_nodes = query_selector_all("[data-svelte=\"svelte-1myew8g\"]", document.head);
			head_nodes.forEach(detach);
			t0 = claim_space(nodes);
			div = claim_element(nodes, "DIV", { class: true });
			var div_nodes = children(div);
			h1 = claim_element(div_nodes, "H1", {});
			var h1_nodes = children(h1);
			t1 = claim_text(h1_nodes, "About Covid-19");
			h1_nodes.forEach(detach);
			t2 = claim_space(div_nodes);
			p0 = claim_element(div_nodes, "P", {});
			var p0_nodes = children(p0);
			t3 = claim_text(p0_nodes, "This app was made for demo purposes / tutorial purposes.");
			p0_nodes.forEach(detach);
			t4 = claim_space(div_nodes);
			p1 = claim_element(div_nodes, "P", {});
			var p1_nodes = children(p1);
			t5 = claim_text(p1_nodes, "I used this\n    ");
			a0 = claim_element(p1_nodes, "A", { href: true });
			var a0_nodes = children(a0);
			t6 = claim_text(a0_nodes, "API");
			a0_nodes.forEach(detach);
			t7 = claim_text(p1_nodes, "\n    to build this app. Thank you for building this!!! HUGE PROPS.");
			p1_nodes.forEach(detach);
			t8 = claim_space(div_nodes);
			p2 = claim_element(div_nodes, "P", {});
			var p2_nodes = children(p2);
			t9 = claim_text(p2_nodes, "This is an open source project.\n    ");
			a1 = claim_element(p2_nodes, "A", { href: true });
			var a1_nodes = children(a1);
			t10 = claim_text(a1_nodes, "Click here");
			a1_nodes.forEach(detach);
			t11 = claim_text(p2_nodes, "\n    to view the code.");
			p2_nodes.forEach(detach);
			div_nodes.forEach(detach);
			this.h();
		},
		h() {
			document.title = "About";
			attr(a0, "href", "https://github.com/novelcovid/api");
			attr(a1, "href", "https://github.com/phptuts/covid-19-sapper-demo");
			attr(div, "class", "ui container svelte-vhmlr");
		},
		m(target, anchor) {
			insert(target, t0, anchor);
			insert(target, div, anchor);
			append(div, h1);
			append(h1, t1);
			append(div, t2);
			append(div, p0);
			append(p0, t3);
			append(div, t4);
			append(div, p1);
			append(p1, t5);
			append(p1, a0);
			append(a0, t6);
			append(p1, t7);
			append(div, t8);
			append(div, p2);
			append(p2, t9);
			append(p2, a1);
			append(a1, t10);
			append(p2, t11);
		},
		p: noop,
		i: noop,
		o: noop,
		d(detaching) {
			if (detaching) detach(t0);
			if (detaching) detach(div);
		}
	};
}

class About extends SvelteComponent {
	constructor(options) {
		super();
		init(this, options, null, create_fragment, safe_not_equal, {});
	}
}

export default About;
